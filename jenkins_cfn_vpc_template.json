{
  "Description": "Cloud Formation Template.  Template Created: 2015-12-09 23:12:17",
  "Mappings": {
    "AWSInstanceType2Arch": {
      "c1.medium": {
        "Arch": "PV64"
      },
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      }
    },
    "ubuntu14AWSRegionArch2AMI": {
      "ap-northeast-1": {
        "HVM64": "ami-936d9d93"
      },
      "ap-southeast-1": {
        "HVM64": "ami-96f1c1c4"
      },
      "ap-southeast-2": {
        "HVM64": "ami-69631053"
      },
      "eu-central-1": {
        "HVM64": "ami-accff2b1"
      },
      "eu-west-1": {
        "HVM64": "ami-47a23a30"
      },
      "sa-east-1": {
        "HVM64": "ami-4d883350"
      },
      "us-east-1": {
        "HVM64": "ami-d05e75b8"
      },
      "us-west-1": {
        "HVM64": "ami-df6a8b9b"
      },
      "us-west-2": {
        "HVM64": "ami-5189a661"
      }
    }
  },
  "Outputs": {
    "JenkinsURL": {
      "Description": "Jenkins   application URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "jenkinsInstance1",
                "PublicIp"
              ]
            },
            "/jenkins"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "jenkinsPWParam": {
      "ConstraintDescription": "Must be greater than 5 characters",
      "Description": "Jenkins default 'user' Password",
      "MinLength": 5,
      "NoEcho": true,
      "Type": "String"
    },
    "jenkinsServerParam": {
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type.",
      "Default": "m3.medium",
      "Description": "Jenkins Server EC2 HVM Instance type",
      "Type": "String"
    },
    "sshIPParam": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be valid IP CIDR range in the form of x.x.x.x/x.",
      "Default": "0.0.0.0/0",
      "MaxLength": 18,
      "MinLength": 9,
      "Type": "String"
    },
    "sshKeyParam": {
      "ConstraintDescription": "Must Not be Empty",
      "Description": "SSH KeyPair Name used to SSH into Instances",
      "MinLength": 3,
      "Type": "String"
    }
  },
  "Resources": {
    "AttachGateway": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "ElkVPC"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "ElkVPC": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "Tags": [
          {
            "Key": "Candidate",
            "Value": "cardright"
          },
          {
            "Key": "Name",
            "Value": "ELK VPC"
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    },
    "InternetGateway": {
      "Properties": {
        "Tags": [
          {
            "Key": "Candidate",
            "Value": "cardright"
          }
        ]
      },
      "Type": "AWS::EC2::InternetGateway"
    },
    "Route": {
      "DependsOn": "AttachGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "publicRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "jenkinsInstance1": {
      "DependsOn": "InternetGateway",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "jenkinsRoleProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "ubuntu14AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "jenkinsServerParam"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "jenkinsServerParam"
        },
        "KeyName": {
          "Ref": "sshKeyParam"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeleteOnTermination": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "publicToolsSG1"
              }
            ],
            "SubnetId": {
              "Ref": "publicToolsSubnet1"
            }
          }
        ],
        "Tags": [
          {
            "Key": "CandidateName",
            "Value": "cardright"
          },
          {
            "Key": "Name",
            "Value": "Jenkins Server"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "service ufw stop\n",
                "apt-get update\n",
                "apt-get install python-pip -y\n",
                "pip install awscli\n",
                "wget -O ~/bitnami-jenkins-1.639-0-linux-x64-installer.run https://bitnami.com/redirect/to/83504/bitnami-jenkins-1.639-0-linux-x64-installer.run?bypassauth=false\n",
                "chmod 754 ~/bitnami-jenkins-1.639-0-linux-x64-installer.run\n",
                "~/bitnami-jenkins-1.639-0-linux-x64-installer.run --prefix /opt/jenkins --mode unattended --base_password ",
                {
                  "Ref": "jenkinsPWParam"
                },
                "\n",
                "wget -O /tmp/jenkins_elk.json https://raw.githubusercontent.com/cardright/jenkins-elk-cloud/master/jenkins_ELK_cfn_vpc_template.json\n",
                "wget -O /opt/update-stack.sh https://raw.githubusercontent.com/cardright/jenkins-elk-cloud/master/update-stack.sh\n",
                "chmod 754 /opt/update-stack.sh\n",
                "wget -O /tmp/jenkinsJob.xml https://raw.githubusercontent.com/cardright/jenkins-elk-cloud/master/jenkinsJob.xml\n",
                "curl -u user:",
                {
                  "Ref": "jenkinsPWParam"
                },
                " -X POST -H \"Content-Type:application/xml\" -d @/tmp/jenkinsJob.xml \"http://localhost/jenkins/createItem?name=DeployELK\" \ncurl -u user:",
                {
                  "Ref": "jenkinsPWParam"
                },
                " -X POST http://localhost/jenkins/job/DeployELK/buildWithParameters?stack_name=",
                {
                  "Ref": "AWS::StackId"
                },
                "&input_file=/tmp/jenkins_elk.json&stack_region=",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "jenkinsRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudformation:CancelUpdateStack",
                    "cloudformation:CreateStack",
                    "cloudformation:ListStackResources",
                    "cloudformation:DescribeStackEvents",
                    "cloudformation:UpdateStack"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Ref": "AWS::StackId"
                    }
                  ]
                },
                {
                  "Action": [
                    "ec2:StartInstances",
                    "ec2:RunInstances",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceStatus",
                    "ec2:AuthorizeSecurityGroupIngress"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                }
              ]
            },
            "PolicyName": "JenkinsPolicies"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "jenkinsRoleProfile": {
      "Properties": {
        "Roles": [
          {
            "Ref": "jenkinsRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "publicRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Candidate",
            "Value": "cardright"
          }
        ],
        "VpcId": {
          "Ref": "ElkVPC"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "publicToolsSG1": {
      "Properties": {
        "GroupDescription": "Enable Access to Servers",
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "sshIPParam"
            },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "5601",
            "IpProtocol": "tcp",
            "ToPort": "5601"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default Security Group"
          }
        ],
        "VpcId": {
          "Ref": "ElkVPC"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "publicToolsSubnet1": {
      "Properties": {
        "CidrBlock": "10.0.8.0/24",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "Candidate",
            "Value": "cardright"
          },
          {
            "Key": "Name",
            "Value": "Public Tools Subnet"
          }
        ],
        "VpcId": {
          "Ref": "ElkVPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicToolsSubnetRouteTableAssoc1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "publicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicToolsSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    }
  }
}
